-- MySQL Script generated by MySQL Workbench
-- Пт 17 апр 2020 00:22:09
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema readme
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema readme
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `readme` DEFAULT CHARACTER SET utf8 ;
USE `readme` ;

-- -----------------------------------------------------
-- Table `readme`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`user` (
  `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `date_reg` TIMESTAMP NULL,
  `email` VARCHAR(320) NOT NULL,
  `login` VARCHAR(30) NOT NULL,
  `password` VARCHAR(128) NOT NULL,
  `avatar_path` VARCHAR(4100) NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC))
ENGINE = InnoDB
COMMENT = 'Представляет зарегистрированного пользователя. ';


-- -----------------------------------------------------
-- Table `readme`.`hashtag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`hashtag` (
  `hashtag_id` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(50) NULL,
  PRIMARY KEY (`hashtag_id`))
ENGINE = InnoDB
COMMENT = 'Один из используемых хештегов на сайте.';


-- -----------------------------------------------------
-- Table `readme`.`content`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`content` (
  `content_id` TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(30) NULL,
  `name_class` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`content_id`),
  UNIQUE INDEX `name_class_UNIQUE` (`name_class` ASC))
ENGINE = InnoDB
COMMENT = 'Один из пяти предопределенных типов контента.';


-- -----------------------------------------------------
-- Table `readme`.`post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`post` (
  `post_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `date_create` TIMESTAMP NULL,
  `heading` VARCHAR(50) NULL,
  `text` TEXT NULL,
  `author_quote` VARCHAR(50) NULL,
  `picture_path` VARCHAR(4100) NULL,
  `video_url` VARCHAR(2050) NULL,
  `link` VARCHAR(2050) NULL,
  `number_views` INT UNSIGNED NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `hashtag_id` TINYINT NULL,
  `content_id` TINYINT UNSIGNED NOT NULL,
  PRIMARY KEY (`post_id`),
  INDEX `fk_post_user1_idx` (`user_id` ASC),
  INDEX `fk_post_hashtag1_idx` (`hashtag_id` ASC),
  INDEX `fk_post_content1_idx` (`content_id` ASC),
  CONSTRAINT `fk_post_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `readme`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_post_hashtag1`
    FOREIGN KEY (`hashtag_id`)
    REFERENCES `readme`.`hashtag` (`hashtag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_post_content1`
    FOREIGN KEY (`content_id`)
    REFERENCES `readme`.`content` (`content_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Состоит из заголовка и содержимого. Набор полей, которые будут заполнены, зависит от выбранного типа.';


-- -----------------------------------------------------
-- Table `readme`.`comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`comment` (
  `comment_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `date_create` TIMESTAMP NULL,
  `text` TINYTEXT NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `post_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`comment_id`),
  INDEX `fk_comment_user1_idx` (`user_id` ASC),
  INDEX `fk_comment_post1_idx` (`post_id` ASC),
  CONSTRAINT `fk_comment_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `readme`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_post1`
    FOREIGN KEY (`post_id`)
    REFERENCES `readme`.`post` (`post_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Текстовый комментарий, оставленный к одному из постов.';


-- -----------------------------------------------------
-- Table `readme`.`like`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`like` (
  `like_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `post_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`like_id`),
  INDEX `fk_user_has_post_post1_idx` (`post_id` ASC),
  INDEX `fk_user_has_post_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_user_has_post_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `readme`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_post_post1`
    FOREIGN KEY (`post_id`)
    REFERENCES `readme`.`post` (`post_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `readme`.`subscription`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`subscription` (
  `subscription_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id_subscriber` INT NULL,
  `user_id_creator` INT NULL,
  PRIMARY KEY (`subscription_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `readme`.`message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `readme`.`message` (
  `message_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `date_create` TIMESTAMP NULL,
  `text` TINYTEXT NULL,
  `user_id_sender` INT UNSIGNED NOT NULL,
  `user_id_recipient` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`message_id`))
ENGINE = InnoDB
COMMENT = 'Одно сообщение из внутренней переписки пользователей на сайте';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
